Financial and Economic Stock Data Preparation in SQL
Goal: Understand the impact of economic data on various stock data such as trading volume, daily high, daily low, as well as Forex, retail sales, bankruptcy rate, consumer spending.
SQL Type: MySQL in MySQL Workbench
Dataset: 
- Title: Stock Market Data January 2000 - March 2008
- Source: https://www.kaggle.com/datasets/khushikyad001/finance-and-economics-dataset-2000-present?resource=download

This dataset provides daily financial and macroeconomic data, including stock market prices, 
GDP growth, inflation, interest rates, consumer spending, exchange rates, and more.

Columns:
_____________________________________________________________________________________
Date: The date of the financial data (YYYY-MM-DD)
Stock Index: The stock market index (S&P 500, NASDAQ, Dow Jones)
Open Price: Opening price of the stock market on the given day (USD)
Close Price: Closing price of the stock market on the given day (USD)
Daily High: Highest stock price reached during the day (USD)
Daily Low: Lowest stock price reached during the day (USD)
Trading Volume: Number of shares traded on that day
GDP Growth (%): Percentage change in Gross Domestic Product (GDP)
Inflation Rate (%): Percentage change in the Consumer Price Index (CPI)
Unemployment Rate (%): Percentage of unemployed individuals in the labor force	
Interest Rate (%)	
Consumer Confidence Index	
Government Debt (Billion USD)	
Corporate Profits (Billion USD)	
Forex USD/EUR	
Forex USD/JPY	
Crude Oil Price (USD per Barrel)	
Gold Price (USD per Ounce)	
Real Estate Index	
Retail Sales (Billion USD)	
Bankruptcy Rate (%)	
Mergers & Acquisitions Deals	
Venture Capital Funding (Billion USD)	
Consumer Spending (Billion USD)




MySQL Queries:
_____________________________________________________________________________________

CREATE DATABASE stock_market;
USE stock_market;


-- TABLE CREATION
CREATE TABLE stocks (
Date_ text,
Stock_Index text,
Open_Price double,
Close_Price double,
Daily_High double,
Daily_Low double,
Trading_Volume int,
GDP_Growth double,
Inflation_Rate double,
Unemployment_Rate double,
Interest_Rate double,
Consumer_Confidence_Index int,
Government_Debt int,
Corporate_Profits int,
Forex_USD_EUR double,
Forex_USD_JPY double,
Crude_Oil_Price double,
Gold_Price double,
Real_Estate_Index double,
Retail_Sales int,
Bankruptcy_Rate double,
M_A_Deals int,
Venture_Capital_Funding double,
Consumer_Spending int
);


CREATE TABLE stock_data AS
SELECT 
Date_, Stock_Index,
Open_Price, Close_Price,
Daily_High, Daily_Low, Trading_Volume
FROM stocks;

CREATE TABLE economic_data AS 
SELECT 
Date_, GDP_Growth, 
Inflation_Rate, Unemployment_Rate, 
Interest_Rate, Consumer_Confidence_Index, 
Government_Debt, Corporate_Profits, 
Real_Estate_Index, Retail_Sales, 
Bankruptcy_Rate, M_A_Deals, 
Venture_Capital_Funding, Consumer_Spending
FROM stocks;

CREATE TABLE commodity_data AS
SELECT
Date_, Crude_Oil_Price, Gold_Price
FROM stocks;

CREATE TABLE forex_data AS
SELECT 
Date_, Forex_USD_EUR, Forex_USD_JPY
FROM stocks;


CREATE TABLE rate AS
SELECT
Date_, Inflation_Rate, Unemployment_Rate, Interest_Rate, Bankruptcy_Rate
FROM stocks;


-- Check which indexes are in Stock_Index
SELECT DISTINCT Stock_Index FROM stocks;


-- Show the average trading volume for the year 2000 by Stock Index
SELECT Date_, Stock_Index, Open_Price, Close_Price, Daily_High, Daily_Low, Trading_Volume, 
 AVG(Trading_Volume) OVER
         (PARTITION BY Stock_Index)
         AS Avg_Trading_Volume
FROM stock_data
WHERE Date_ BETWEEN "2000-01-01" AND "2000-12-31" 
GROUP BY Date_, Stock_Index, Open_Price, Close_Price, Daily_High, Daily_Low, Trading_Volume;


-- Show the average closing price for the year 2000 by Stock Index
SELECT Date_, Stock_Index, Open_Price, Close_Price, Daily_High, Daily_Low, Trading_Volume, 
 AVG(Close_Price) OVER
         (PARTITION BY Stock_Index)
         AS Avg_Close_Price
FROM stock_data
WHERE Date_ BETWEEN "2000-01-01" AND "2000-12-31" 
GROUP BY Date_, Stock_Index, Open_Price, Close_Price, Daily_High, Daily_Low, Trading_Volume;


-- Show the average open price for the year 2000 by Stock Index
SELECT Date_, Stock_Index, Open_Price, Close_Price, Daily_High, Daily_Low, Trading_Volume, 
 AVG(Open_Price) OVER
         (PARTITION BY Stock_Index)
         AS Avg_Open_Price
FROM stock_data
WHERE Date_ BETWEEN "2000-01-01" AND "2000-12-31" 
GROUP BY Date_, Stock_Index, Open_Price, Close_Price, Daily_High, Daily_Low, Trading_Volume;


-- Show the difference between the daily high and low
SELECT Date_, Stock_Index, Open_Price, Close_Price, Daily_High, Daily_Low, ROUND(Daily_High - Daily_Low, 2) AS Hi_Lo_Dif,
Trading_Volume 
FROM stock_data
ORDER BY Stock_Index, Date_;
